# 30 다국어

# 문제
# 어느 날, 미르코는 우연히 길거리에서 양수 N을 보았다. 미르코는 30이란 수를 존경하기 때문에, 그는 길거리에서 찾은 수에 포함된 숫자들을 섞어 30의 배수가 되는 가장 큰 수를 만들고 싶어한다.

# 미르코를 도와 그가 만들고 싶어하는 수를 계산하는 프로그램을 작성하라.

# 입력
# N을 입력받는다. N는 최대 105개의 숫자로 구성되어 있으며, 0으로 시작하지 않는다.

# 출력
# 미르코가 만들고 싶어하는 수가 존재한다면 그 수를 출력하라. 그 수가 존재하지 않는다면, -1을 출력하라.


#-------------------풀이 ---------------------
## 시간초과로 오류났다.

n = list(str(int(input())))

# n으로 만들 수 있는 가장 큰 수, 가장 작은 수 
max_n = sorted(n,reverse=True)  
max_n = int(''.join(max_n)) 

min_n = sorted(n)  
min_n = int(''.join(min_n)+ '0'*min_n.count('0')) 

# max_n보다 크거나 같은 30의 배수 
max_n = (30*(max_n//30)+(max_n%30)*30)

# min_n보다 크거나 같은 30의 배수 
min_n = (30*(min_n//30)+(min_n%30)*30)

for i in range(max_n, min_n-1, -30):
    if sorted(list(str(i))) == sorted(n):            
        print(i)
        exit(0)
print(-1)

#------------------- 고민 log ---------------------

# 깨달았다.
# 지금까지 숫자의 조합을 나열해서, 30의 배수가 되는 가장 큰 수를 찾고 있었는데
# 30의 배수는 자리수를 다 더해서 3의 배수가 되고, 맨 끝 자리가 0이면 된다.
# 따라서 이 조건에 맞는 숫자의 조합을 갖고 있다면, 30의 배수가 되는 가장 큰 수는 
# 양수 N의 숫자의 조합의 최댓값일것이다!! ㅠㅠㅠ

# 다른 분들의 코드를 봐도 왜 이게 가능한거지??!! 계속 고민했는데 깨달았다 ㅠㅠ 

#-------------------풀이2 (정답!) ---------------------

# 30의 배수 : 자리 수를 다 더해서 3의 배수가 되고, 맨 끝 자리가 0이면 된다.

n = input()
n_sum = sum(list(map(int,n))) # 자리수의 합 
n_max= int(''.join(sorted(n,reverse=True))) # 숫자 조합의 최댓값 

# 3의 배수가 아니라면 -1 
if n_sum%3:
    print(-1)
else:
    # 맨 끝 자리가 0이 아니라면 -1 
    if n_max%10:
        print(-1)
    else:
        print(n_max)