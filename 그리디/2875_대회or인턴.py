# 문제
# 백준대학교에서는 대회에 나갈 때 2명의 여학생과 1명의 남학생이 팀을 결성해서 나가는 것이 원칙이다. (왜인지는 총장님께 여쭈어보는 것이 좋겠다.)

# 백준대학교는 뛰어난 인재들이 많아 올해에도 N명의 여학생과 M명의 남학생이 팀원을 찾고 있다. 대회에 참여하려는 학생들 중 K명은 반드시 인턴쉽 프로그램에 참여해야 한다. 인턴쉽에 참여하는 학생은 대회에 참여하지 못한다.

# 백준대학교에서는 뛰어난 인재들이 많기 때문에, 많은 팀을 만드는 것이 최선이다.

# 여러분은 여학생의 수 N, 남학생의 수 M, 인턴쉽에 참여해야하는 인원 K가 주어질 때 만들 수 있는 최대의 팀 수를 구하면 된다.

# 입력
# 첫째 줄에 N, M, K가 순서대로 주어진다. (0 ≤ M ≤ 100, 0 ≤ N ≤ 100, 0 ≤ K ≤ M+N),

# 출력
# 만들 수 있는 팀의 최대 개수을 출력하면 된다.

#----------------------------------------------- 풀이 ---------------------------------------------------------#

# 여, 남, 인턴쉽 참가 
n,m,k = map(int,input().split())
result = 0



for i in range(1, min(n//2, m)+1):
    print(i)
    
    
while True:
    
    # 여학생의 수가 더 많으면 
    if n//2 >= m:
        # 여학생 한명씩 인턴쉽 참가 인원에 추가 
        n -=1 
        k -=1
        max_team = min((n)//2,m)

    # 남학생의 수가 더 많으면 
    elif n//2 <m:
        # 남학생 한명씩 인턴쉽 참가 인원에 추가 
        m -=1 
        k -=1
        max_team = min((n)//2,m)
    
    if k == 0:
        break

print(max_team)


# 반례 존재 
3 6 6

3-1 6-5 6 
2 1 0
1 


# 1. min값을 구하고 

can_join = n+m-k # 대회 참가 가능 인원


# 최대로 만들 수 있는 만큼 만들고 빼면 어떨까? 

# 1. 일단 쌍을 만들자 
max_team = min((n-k)//2,m)
print(max_team)

# 2. 비교 
# 팀을 만들 수 있는 인원  >   대회 참가 가능한 인원 
# == 팀을 만들 수 있는 인원이 더 많다면( = 대회 참가 인원이 부족)
if max_team*2 + max_team > can_join:
    # 3명의 인원(2+1)을 인턴쉽 참가 인원에 추가하기 
    max_team -=1 
    k -=3
    
    # 여학생 인원을 필요한 만큼 줄이기 (인턴쉽에 참가)
    ## 남학생은 한명이 팀 하나를 담당 => 여학생을 인턴쉽 참가 인원에 추가하는게 최대 팀 생성
    max_team = min(n//2,m)
    n -= (max_team*2 + max_team - can_join) 
print(max_team)



# 여, 남, 인턴쉽 참가 
n,m,k = map(int,input().split())

# 대회 최대 참가 가능 인원  
max_team = min((n)//2,m)

while True:
    can_join = n+m-k # 대회 참가 가능 인원
    # 팀을 만들 수 있는 인원  >   대회 참가 가능한 인원 
    # == 팀을 만들 수 있는 인원이 더 많다면( = 대회 참가 인원이 부족)
    if max_team*3 > can_join:
        print(max_team*3, can_join)
        max_team -=1 
        k -=3
    else:
        print(max_team)
        break
    
    if k <=0:     
        print(max_team)
        break