# -2진수

# 문제
# -2진법은 부호 없는 2진수로 표현이 된다. 2진법에서는 20, 21, 22, 23이 표현 되지만 -2진법에서는 (-2)0 = 1, (-2)1 = -2, (-2)2 = 4, (-2)3 = -8을 표현한다. 10진수로 1부터 표현하자면 1, 110, 111, 100, 101, 11010, 11011, 11000, 11001 등이다.

# 10진법의 수를 입력 받아서 -2진수를 출력하는 프로그램을 작성하시오.

# 입력
# 첫 줄에 10진법으로 표현된 수 N이 주어진다.

# 출력
# -2진법 수를 출력한다.

# 제한
# -2,000,000,000 ≤ N ≤ 2,000,000,000
# 예제 입력 1 
# -13
# 예제 출력 1 
# 110111

#--------------------------- 풀이 ---------------------------#
# n이 음수인 경우 
# n을 -2로 나눈 나머지는 항상 +1 or 0이 나와야 한다. (부호 없는 2진수)

# ex. n = -13일 때, -2로 나눈 나머지는 항상 +1 or 0이 나와야 한다.
# 즉, -13 - (-2*x) >= 0 이므로 
# 2*x >= 13 , x = 7이 된다. 
# 그러나 
# -13/-2 = 6.5, -13%-2 = -1 이다.  
# 따라서, n이 음수일 경우를 대비해 n을 -2로 나눈 몫은 반올림을 하고, 몫은 절댓값으로 처리한다.

#--------------------------- 코드 ---------------------------#

import math

n =int(input()) # 10진법 

if not n:
    print('0')

result =""
while n !=0:
    result += str(abs((n)%(-2))) # -1로 나오는 경우 절댓값 
    n = math.ceil(n/-2)  # -2로 나누어 떨어지지 않을 때 반올림 

print(result[::-1]) # 이거를 깜빡해서.....한시간동안 헤맸다 