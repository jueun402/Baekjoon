# 조합 0의 개수

# 문제
#  
# $n \choose m$의 끝자리 $0$의 개수를 출력하는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 정수 $n$, $m$ ($0 \le m \le n \le 2,000,000,000$, $n \ne 0$)이 들어온다.

# 출력
# 첫째 줄에 
# $n \choose m$의 끝자리 $0$의 개수를 출력한다.

# 예제 입력 1 
# 25 12
# 예제 출력 1 
# 2

#--------------------------풀이 --------------------------------#


# combination, 끝자리 0의 개수 출력
# 끝 자리가 0이려면, 10으로 곱해지는 수가 존재해야한다. 
# 즉, 2와 5가 동시에 존재해야 한다.

# combination을 구하기 위해 1~n까지를 순회하면 시간초과가 발생한다.
# 따라서 
# 1~n까지의 범위 내에 2를 기준으로 2*1, 2*2, 2*3 ..의 숫자들을 
# 1~n까지의 범위 내에 5를 기준으로 5*1, 5*2, 5*3 ..의 숫자들을 
# 찾아서 지수의 개수를 더하고 빼는 방식으로 진행한다. 
# 자세한 내용은 코드로 설명하겠다.
 

def divComb(n,numb):
    # 1~n 범위 내에 2 or 5의 배수 찾기

    res, i = 0,0
    while True:
        if (numb**i) > n:
            break
        i +=1
        res += n//(numb**i)

    return res

n, m = map(int,input().split())

# 1) n!의 2의 개수, 5의 개수 
# 2) (n-m)!의 2의 개수, 5의 개수
# 3) m!의 2의 개수, 5의 개수 
twoRes = divComb(n,2)-(divComb(n-m,2) + divComb(m,2))
fiveRes = divComb(n,5)- (divComb(n-m,5) + divComb(m,5))

print(min(twoRes,fiveRes))

#-------------------------- 후기 --------------------------------#
# 넘 어려웠다.
# 전 문제를 이 방식으로 안풀어서 더 헤맸다.
# 문제 풀이 방식을 다른 시각으로 보는게 중요한 것을 깨달았다.
# 다른 문제풀이들은 봐도 이해가 안갔는데 https://hoony-gunputer.tistory.com/entry/%EB%B0%B1%EC%A4%80-2004-%EC%A1%B0%ED%95%A9-0%EC%9D%98-%EA%B0%9C%EC%88%98 이분의 문제풀이를 보고 이해가 갔다.
# 더 많이 보다 더 어려운 문제를 하나 푸는게 성장에 도움될 듯 하다! 